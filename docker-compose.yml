version: "3"

# networks:
#   thamelmart:
#     driver: bridge
# volumes:


services:

  # customer-ui:
  #   container_name: "customer-ui"
  #   restart: unless-stopped
  #   build: ./projects/nextjsUi


  api:
    container_name: "${PROJECT_NAME}-api"
    restart: unless-stopped
    build: ./php
    # user: 1000:1000
    # environment:
    #   - PHP_MEMORY_LIMIT: "${PHP_MEMORY_LIMIT}"
    #   - COMPOSER_MEMORY_LIMIT: '-1'
    # command: composer install
    volumes:
      - ./projects/api.thamelmart.test:/var/www/api.thamelmart.test
    working_dir: /var/www/api.thamelmart.test
    ports:
      - '81:81'
      - '446:446'
    # networks:
    #   - thamelmart

  scrapper:
    container_name: "${PROJECT_NAME}_scrapper"
    restart: always
    build: ./projects/fastApi # From Current directory!
    command: "/usr/local/bin/gunicorn --preload --reload -b 0.0.0.0:8000 -w 4 -k uvicorn.workers.UvicornWorker app.main:app --chdir=/var/www/fastApi"
    volumes:
      - "./projects:/var/www"
    environment:
      PYTHON UNBUFFERED: 1
      PYTHONDONTWRITEBYTECODE: 1
      APP_NAME: "fast api"
      ADMIN_EMAIL: "gracysusant@gmail.com"
      DB_URL: "mysql+mysqlconnector://root:root@mysql:3306/fastapi"
      SCRAP_API_TOKEN: "dd424a4ae2c60473bb07132def3b89a1"
    ports:
      - "8000:8000"
    depends_on:
      - mysql
    # networks:
    #   - thamelmart

  nginx:
    image: nginx:stable-alpine
    restart: unless-stopped
    build:
        context: ./nginx
        dockerfile: Dockerfile
    container_name: "${PROJECT_NAME}_nginx"
    depends_on:
      - api
      - mysql
    ports:
      - "8080:8080"
    volumes:
      - ./projects/api.thamelmart.test:/var/www/api.thamelmart.test
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
      - ./nginx/log:/var/log/nginx
      - ./nginx/ssl:/etc/nginx/ssl
    # labels:
    #   - 'traefik.http.routers.${PROJECT_NAME}_nginx.rule=HostRegexp(`${APP_DOMAIN}`, `{subdomain:[a-z]+.${APP_DOMAIN}}`)'
    #   - 'traefik.http.routers.${PROJECT_NAME}_nginx.priority=1'
    #   - 'traefik.docker.network=proxy'
    # networks:
    #   - thamelmart

  redis:
    image: redis:latest
    container_name: "${PROJECT_NAME}_redis"
    ports:
      - '6379:6379'
    volumes:
      - '~/.myproject/${PROJECT_NAME}_redis:/data'
    # networks:
    #   - thamelmart
      
  mysql:
    container_name: "${PROJECT_NAME}_mysql"
    image: mysql:latest
    command: mysqld --default-authentication-plugin=mysql_native_password
    volumes:
      - "~/.myproject/data/mysql:/var/lib/mysql"
    ports:
      - "3306:3306"
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD="root"
      - MYSQL_DATABASE="fastapi"
      - MYSQL_PASSWORD="root"
    # networks:
    #   - thamelmart

  pma:
    image: phpmyadmin/phpmyadmin
    container_name: "kuber_pma"
    links:
      - mysql
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
    restart: always
    ports:
      - "8200:80"

  # traefik:
  #   image: traefik:v2.0
  #   container_name: "${PROJECT_NAME}_traefik"
  #   restart: always
  #   command:
  #     - --entrypoints.web.address=:80
  #     - --providers.docker=true
  #     - --api.insecure=true
  #     - --log.level=debug
  #   volumes:
  #     - '/var/run/docker.sock:/var/run/docker.sock'
  #   ports:
  #     - '80:80'
  #     - '8080:8080'
  #   networks:
  #     - thamelmart